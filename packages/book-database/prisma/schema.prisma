
datasource db {
  provider = "mysql"
  //url      = env("BOOK_DATABASE_URL")
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  user_id            String    @id @default(cuid())
  user_name          String?
  email              String?   @unique
  password           String?
  book Book[]
  authors Author[]
}

model Book {
  book_id            String      @id @default(cuid())
  user_id               String?
  user User?                   @relation(fields: [user_id], references: [user_id])
  author_id String?
  book_name          String?
  book_description String?
  book_properties BookProperties[]
  author Author? @relation(fields: [author_id], references: [author_id])

}

model BookProperties {
  @@id([book_id, author_id])
book_id String
author_id String
book   Book   @relation(fields: [book_id], references: [book_id])
author Author @relation (fields: [author_id], references: [author_id])
genre String?
book_rating        Int @default(0)
book_synopsis   String?
book_reccomendation String?
}

model Author {
  author_id          String @id @default(cuid())
  author_name        String?
  author_description String?
  books Book[]
  user User       @relation(fields: [user_id], references: [user_id])
  user_id         String
  book_properties BookProperties[]
}


//model User {
 // user_id            String    @id @default(cuid())
 // user_name          String?
 // email              String?   @unique
 // password           String?
  //authors Author[]
//}

//model Book {
 // book_id            String      @id @default(cuid())
  //book_name          String?
  //book_description String?
  //book_properties BookProperties[]
  //author Author @relation(fields: [author_id], references: [author_id])

//}

//model BookProperties {
  //@@id([book_id, author_id])
//book_id String
//author_id String
//author Author @relation (fields: [author_id], references: [author_id])
//book   Book   @relation(fields: [book_id], references: [book_id])
//genre String?
//book_rating        Int @default(0)
//book_synopsis   String?
//book_reccomendation String?
//}

//model Author {
  //author_id          String @id @default(cuid())
  //author_name        String?
  //author_description String?
  //book_properties BookProperties[]
 // user User       @relation(fields: [user_id], references: [user_id])
 // user_id         String
//}

